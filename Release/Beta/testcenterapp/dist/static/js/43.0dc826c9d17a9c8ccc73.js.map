{"version":3,"sources":["webpack:///./src/api/condition/dbcondition.js","webpack:///src/views/condition/dbcondition/index.vue","webpack:///./src/views/condition/dbcondition/index.vue?46b9","webpack:///./src/views/condition/dbcondition/index.vue"],"names":["search","dbconditionForm","Object","request","url","method","data","dbcondition","filters","statusFilter","status","published","draft","deleted","itemKey","tmpenviromentname","dbconditionList","listLoading","total","listQuery","page","size","enviromentname","dialogStatus","dialogFormVisible","textMap","updateRole","update","add","btnLoading","tmpdbcondition","id","conditionid","enviromentid","dbtype","dbcontent","connectstr","memo","creator","computed","extends_default","vuex_esm","created","this","getdbconditionList","getenviromentallList","getmachineLists","methods","unix2CurrentTime","utils","selectChangedEN","e","i","enviromentnameList","length","envid","console","log","selectChangedMN","machinenameList","machinename","machineid","_this","then","response","list","catch","res","$message","error","searchBy","_this2","Math","random","handleSizeChange","handleCurrentChange","getIndex","index","showAdddbconditionDialog","name","adddbcondition","_this3","$refs","validate","valid","success","showUpdatedbconditionDialog","updatedbcondition","_this4","removedbcondition","_this5","$confirm","confirmButtonText","cancelButtonText","type","dbconditionId","info","isUniqueDetail","condition_dbcondition","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","inline","hasPermission","icon","nativeOn","click","$event","preventDefault","_v","_e","clearable","placeholder","keyup","indexOf","_k","keyCode","key","model","value","callback","$$v","$set","expression","loading","on","directives","rawName","modifiers","body","element-loading-text","border","fit","highlight-current-row","label","align","width","scopedSlots","_u","fn","scope","domProps","textContent","_s","$index","prop","row","createTime","lastmodifyTime","current-page","page-size","page-sizes","layout","size-change","current-change","title","visible","update:visible","ref","staticStyle","margin-left","status-icon","label-position","label-width","required","change","display","_l","envname","macname","slot","resetFields","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/43.0dc826c9d17a9c8ccc73.js","sourcesContent":["import request from '@/utils/request'\n\nexport function getdbconditionList(params) {\n  return request({\n    url: '/condition/db',\n    method: 'get',\n    params\n  })\n}\n\nexport function getdbconditionnum() {\n  return request({\n    url: '/condition/db/getdbconditionnum',\n    method: 'get'\n  })\n}\n\nexport function search(dbconditionForm) {\n  return request({\n    url: '/condition/db/search',\n    method: 'post',\n    data: dbconditionForm\n  })\n}\n\nexport function adddbcondition(dbconditionForm) {\n  return request({\n    url: '/condition/db',\n    method: 'post',\n    data: dbconditionForm\n  })\n}\n\nexport function updatedbcondition(dbconditionForm) {\n  return request({\n    url: '/condition/db/detail',\n    method: 'put',\n    data: dbconditionForm\n  })\n}\n\nexport function removedbcondition(dbconditionId) {\n  return request({\n    url: '/condition/db/' + dbconditionId,\n    method: 'delete'\n  })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/condition/dbcondition.js","<template>\n  <div class=\"app-container\">\n    <div class=\"filter-container\">\n      <el-form :inline=\"true\">\n        <el-form-item>\n          <el-button\n            type=\"success\"\n            size=\"mini\"\n            icon=\"el-icon-refresh\"\n            v-if=\"hasPermission('dbcondition:list')\"\n            @click.native.prevent=\"getdbconditionList\"\n          >刷新</el-button>\n          <el-button\n            type=\"primary\"\n            size=\"mini\"\n            icon=\"el-icon-plus\"\n            v-if=\"hasPermission('dbcondition:add')\"\n            @click.native.prevent=\"showAdddbconditionDialog\"\n          >添加DB条件</el-button>\n        </el-form-item>\n\n        <span v-if=\"hasPermission('dbcondition:search')\">\n          <el-form-item>\n            <el-input clearable v-model=\"search.dbtype\" @keyup.enter.native=\"searchBy\" placeholder=\"DB类型\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"searchBy\"  :loading=\"btnLoading\">查询</el-button>\n          </el-form-item>\n        </span>\n      </el-form>\n    </div>\n    <el-table\n      :data=\"dbconditionList\"\n      :key=\"itemKey\"\n      v-loading.body=\"listLoading\"\n      element-loading-text=\"loading\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column label=\"编号\" align=\"center\" width=\"60\">\n        <template slot-scope=\"scope\">\n          <span v-text=\"getIndex(scope.$index)\"></span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"数据库类型\" align=\"center\" prop=\"dbtype\" width=\"120\"/>\n      <el-table-column label=\"数据库内容\" align=\"center\" prop=\"dbcontent\" width=\"120\"/>\n      <el-table-column label=\"连接字\" align=\"center\" prop=\"connectstr\" width=\"120\"/>\n      <el-table-column label=\"操作人\" align=\"center\" prop=\"creator\" width=\"100\"/>\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"160\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.createTime) }}</template>\n      </el-table-column>\n      <el-table-column label=\"最后修改时间\" align=\"center\" prop=\"lastmodifyTime\" width=\"160\">\n        <template slot-scope=\"scope\">{{ unix2CurrentTime(scope.row.lastmodifyTime) }}\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"管理\" align=\"center\"\n                       v-if=\"hasPermission('dbcondition:update')  || hasPermission('dbcondition:delete')\">\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"warning\"\n            size=\"mini\"\n            v-if=\"hasPermission('dbcondition:update') && scope.row.id !== id\"\n            @click.native.prevent=\"showUpdatedbconditionDialog(scope.$index)\"\n          >修改</el-button>\n          <el-button\n            type=\"danger\"\n            size=\"mini\"\n            v-if=\"hasPermission('dbcondition:delete') && scope.row.id !== id\"\n            @click.native.prevent=\"removedbcondition(scope.$index)\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"search.page\"\n      :page-size=\"search.size\"\n      :total=\"total\"\n      :page-sizes=\"[10, 20, 30, 40]\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n    ></el-pagination>\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form\n        status-icon\n        class=\"small-space\"\n        label-position=\"left\"\n        label-width=\"100px\"\n        style=\"width: 300px; margin-left:50px;\"\n        :model=\"tmpdbcondition\"\n        ref=\"tmpdbcondition\"\n      >\n        <el-form-item label=\"测试环境\" prop=\"enviromentname\" required >\n          <el-select v-model=\"tmpdbcondition.enviromentname\"  placeholder=\"测试环境名\" @change=\"selectChangedEN($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(envname, index) in enviromentnameList\" :key=\"index\">\n              <el-option :label=\"envname.enviromentname\" :value=\"envname.enviromentname\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"服务器\" prop=\"machinename\" required >\n          <el-select v-model=\"tmpdbcondition.machinename\" placeholder=\"服务器\" @change=\"selectChangedMN($event)\">\n            <el-option label=\"请选择\" value=\"''\" style=\"display: none\" />\n            <div v-for=\"(macname, index) in machinenameList\" :key=\"index\">\n              <el-option :label=\"`${macname.machinename} ：${macname.ip}`\" :value=\"macname.machinename\" required/>\n            </div>\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click.native.prevent=\"dialogFormVisible = false\">取消</el-button>\n        <el-button\n          type=\"danger\"\n          v-if=\"dialogStatus === 'add'\"\n          @click.native.prevent=\"$refs['tmpdbcondition'].resetFields()\"\n        >重置</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"dialogStatus === 'add'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"adddbcondition\"\n        >添加</el-button>\n        <el-button\n          type=\"success\"\n          v-if=\"dialogStatus === 'update'\"\n          :loading=\"btnLoading\"\n          @click.native.prevent=\"updatedbcondition\"\n        >修改</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n<script>\n  import { search, adddbcondition, updatedbcondition, removedbcondition } from '@/api/condition/dbcondition'\n  import { unix2CurrentTime } from '@/utils'\n  import { mapGetters } from 'vuex'\n\n  export default {\n    filters: {\n      statusFilter(status) {\n        const statusMap = {\n          published: 'success',\n          draft: 'gray',\n          deleted: 'danger'\n        }\n        return statusMap[status]\n      }\n    },\n    data() {\n      return {\n        itemKey: null,\n        tmpenviromentname: '',\n        dbconditionList: [], // 环境服务器列表\n        listLoading: false, // 数据加载等待动画\n        total: 0, // 数据总数\n        listQuery: {\n          page: 1, // 页码\n          size: 10, // 每页数量\n          listLoading: true,\n          enviromentname: ''\n        },\n        dialogStatus: 'add',\n        dialogFormVisible: false,\n        textMap: {\n          updateRole: '修改测试环境',\n          update: '修改测试环境',\n          add: '添加测试环境'\n        },\n        btnLoading: false, // 按钮等待动画\n        tmpdbcondition: {\n          id: '',\n          conditionid: '',\n          enviromentid: '',\n          dbtype: '',\n          dbcontent: '',\n          connectstr: '',\n          memo: '',\n          creator: ''\n        },\n        search: {\n          page: 1,\n          size: 10,\n          dbtype: null\n        }\n      }\n    },\n\n    computed: {\n      ...mapGetters(['name', 'sidebar', 'avatar'])\n    },\n\n    created() {\n      this.getdbconditionList()\n      this.getenviromentallList()\n      this.getmachineLists()\n    },\n\n    methods: {\n      unix2CurrentTime,\n\n      /**\n       * 发布单元下拉选择事件获取发布单元id  e的值为options的选值\n       */\n      selectChangedEN(e) {\n        for (let i = 0; i < this.enviromentnameList.length; i++) {\n          if (this.enviromentnameList[i].enviromentname === e) {\n            this.tmpdbcondition.envid = this.enviromentnameList[i].id\n          }\n          console.log(this.enviromentnameList[i].id)\n        }\n      },\n\n      /**\n       * 发布单元下拉选择事件获取发布单元id  e的值为options的选值\n       */\n      selectChangedMN(e) {\n        for (let i = 0; i < this.machinenameList.length; i++) {\n          if (this.machinenameList[i].machinename === e) {\n            this.tmpdbcondition.machineid = this.machinenameList[i].id\n          }\n          console.log(this.machinenameList[i].id)\n        }\n      },\n\n      /**\n       * 获取服务器环境列表\n       */\n      getdbconditionList() {\n        this.listLoading = true\n        this.search.enviromentname = this.tmpenviromentname\n        search(this.search).then(response => {\n          this.dbconditionList = response.data.list\n          this.total = response.data.total\n          this.listLoading = false\n        }).catch(res => {\n          this.$message.error('加载测试环境服务器列表失败')\n        })\n      },\n\n      searchBy() {\n        this.search.page = 1\n        this.listLoading = true\n        search(this.search).then(response => {\n          this.itemKey = Math.random()\n          this.dbconditionList = response.data.list\n          this.total = response.data.total\n        }).catch(res => {\n          this.$message.error('搜索失败')\n        })\n        this.tmpenviromentname = this.search.enviromentname\n        this.listLoading = false\n        this.btnLoading = false\n      },\n\n      /**\n       * 改变每页数量\n       * @param size 页大小\n       */\n      handleSizeChange(size) {\n        this.search.page = 1\n        this.search.size = size\n        this.getdbconditionList()\n      },\n      /**\n       * 改变页码\n       * @param page 页号\n       */\n      handleCurrentChange(page) {\n        this.search.page = page\n        this.getdbconditionList()\n      },\n      /**\n       * 表格序号\n       * 可参考自定义表格序号\n       * http://element-cn.eleme.io/#/zh-CN/component/table#zi-ding-yi-suo-yin\n       * @param index 数据下标\n       * @returns 表格序号\n       */\n      getIndex(index) {\n        return (this.search.page - 1) * this.search.size + index + 1\n      },\n      /**\n       * 显示添加测试环境对话框\n       */\n      showAdddbconditionDialog() {\n        // 显示新增对话框\n        this.dialogFormVisible = true\n        this.dialogStatus = 'add'\n        this.tmpdbcondition.id = ''\n        this.tmpdbcondition.envid = ''\n        this.tmpdbcondition.machineid = ''\n        this.tmpdbcondition.machinename = ''\n        this.tmpdbcondition.enviromentname = ''\n        this.tmpdbcondition.creator = this.name\n      },\n      /**\n       * 添加测试环境\n       */\n      adddbcondition() {\n        this.$refs.tmpdbcondition.validate(valid => {\n          if (valid) {\n            this.btnLoading = true\n            adddbcondition(this.tmpdbcondition).then(() => {\n              this.$message.success('添加成功')\n              this.getdbconditionList()\n              this.dialogFormVisible = false\n              this.btnLoading = false\n            }).catch(res => {\n              this.$message.error('添加失败')\n              this.btnLoading = false\n            })\n          }\n        })\n      },\n      /**\n       * 显示修改测试环境对话框\n       * @param index 测试环境下标\n       */\n      showUpdatedbconditionDialog(index) {\n        this.dialogFormVisible = true\n        this.dialogStatus = 'update'\n        this.tmpdbcondition.id = this.dbconditionList[index].id\n        this.tmpdbcondition.envid = this.dbconditionList[index].envid\n        this.tmpdbcondition.machineid = this.dbconditionList[index].machineid\n        this.tmpdbcondition.machinename = this.dbconditionList[index].machinename\n        this.tmpdbcondition.enviromentname = this.dbconditionList[index].enviromentname\n        this.tmpdbcondition.creator = this.name\n      },\n      /**\n       * 更新测试环境\n       */\n      updatedbcondition() {\n        this.$refs.tmpdbcondition.validate(valid => {\n          if (valid) {\n            updatedbcondition(this.tmpdbcondition).then(() => {\n              this.$message.success('更新成功')\n              this.getdbconditionList()\n              this.dialogFormVisible = false\n            }).catch(res => {\n              this.$message.error('更新失败')\n            })\n          }\n        })\n      },\n\n      /**\n       * 删除测试环境\n       * @param index 测试环境下标\n       */\n      removedbcondition(index) {\n        this.$confirm('删除该测试环境？', '警告', {\n          confirmButtonText: '是',\n          cancelButtonText: '否',\n          type: 'warning'\n        }).then(() => {\n          const id = this.dbconditionList[index].id\n          removedbcondition(id).then(() => {\n            this.$message.success('删除成功')\n            this.getdbconditionList()\n          })\n        }).catch(() => {\n          this.$message.info('已取消删除')\n        })\n      },\n\n      /**\n       * 测试环境是否唯一\n       * @param 测试环境\n       */\n      isUniqueDetail(dbcondition) {\n        for (let i = 0; i < this.dbconditionList.length; i++) {\n          if (this.dbconditionList[i].id !== dbcondition.id) { // 排除自己\n            if (this.dbconditionList[i].enviromentname === dbcondition.enviromentname) {\n              if (this.dbconditionList[i].machinename === dbcondition.machinename) {\n                this.$message.error('测试环境名已存在')\n                return false\n              }\n            }\n          }\n        }\n        return true\n      }\n    }\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/views/condition/dbcondition/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\"},[_c('div',{staticClass:\"filter-container\"},[_c('el-form',{attrs:{\"inline\":true}},[_c('el-form-item',[(_vm.hasPermission('dbcondition:list'))?_c('el-button',{attrs:{\"type\":\"success\",\"size\":\"mini\",\"icon\":\"el-icon-refresh\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.getdbconditionList($event)}}},[_vm._v(\"刷新\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('dbcondition:add'))?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showAdddbconditionDialog($event)}}},[_vm._v(\"添加DB条件\")]):_vm._e()],1),_vm._v(\" \"),(_vm.hasPermission('dbcondition:search'))?_c('span',[_c('el-form-item',[_c('el-input',{attrs:{\"clearable\":\"\",\"placeholder\":\"DB类型\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.searchBy($event)}},model:{value:(_vm.search.dbtype),callback:function ($$v) {_vm.$set(_vm.search, \"dbtype\", $$v)},expression:\"search.dbtype\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.btnLoading},on:{\"click\":_vm.searchBy}},[_vm._v(\"查询\")])],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading.body\",value:(_vm.listLoading),expression:\"listLoading\",modifiers:{\"body\":true}}],key:_vm.itemKey,attrs:{\"data\":_vm.dbconditionList,\"element-loading-text\":\"loading\",\"border\":\"\",\"fit\":\"\",\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"label\":\"编号\",\"align\":\"center\",\"width\":\"60\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{domProps:{\"textContent\":_vm._s(_vm.getIndex(scope.$index))}})]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"数据库类型\",\"align\":\"center\",\"prop\":\"dbtype\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"数据库内容\",\"align\":\"center\",\"prop\":\"dbcontent\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"连接字\",\"align\":\"center\",\"prop\":\"connectstr\",\"width\":\"120\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作人\",\"align\":\"center\",\"prop\":\"creator\",\"width\":\"100\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"创建时间\",\"align\":\"center\",\"prop\":\"createTime\",\"width\":\"160\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.createTime)))]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"最后修改时间\",\"align\":\"center\",\"prop\":\"lastmodifyTime\",\"width\":\"160\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._v(_vm._s(_vm.unix2CurrentTime(scope.row.lastmodifyTime))+\"\\n      \")]}}])}),_vm._v(\" \"),(_vm.hasPermission('dbcondition:update')  || _vm.hasPermission('dbcondition:delete'))?_c('el-table-column',{attrs:{\"label\":\"管理\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [(_vm.hasPermission('dbcondition:update') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"warning\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.showUpdatedbconditionDialog(scope.$index)}}},[_vm._v(\"修改\")]):_vm._e(),_vm._v(\" \"),(_vm.hasPermission('dbcondition:delete') && scope.row.id !== _vm.id)?_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.removedbcondition(scope.$index)}}},[_vm._v(\"删除\")]):_vm._e()]}}],null,false,2344648614)}):_vm._e()],1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.search.page,\"page-size\":_vm.search.size,\"total\":_vm.total,\"page-sizes\":[10, 20, 30, 40],\"layout\":\"total, sizes, prev, pager, next, jumper\"},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}}),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":_vm.textMap[_vm.dialogStatus],\"visible\":_vm.dialogFormVisible},on:{\"update:visible\":function($event){_vm.dialogFormVisible=$event}}},[_c('el-form',{ref:\"tmpdbcondition\",staticClass:\"small-space\",staticStyle:{\"width\":\"300px\",\"margin-left\":\"50px\"},attrs:{\"status-icon\":\"\",\"label-position\":\"left\",\"label-width\":\"100px\",\"model\":_vm.tmpdbcondition}},[_c('el-form-item',{attrs:{\"label\":\"测试环境\",\"prop\":\"enviromentname\",\"required\":\"\"}},[_c('el-select',{attrs:{\"placeholder\":\"测试环境名\"},on:{\"change\":function($event){return _vm.selectChangedEN($event)}},model:{value:(_vm.tmpdbcondition.enviromentname),callback:function ($$v) {_vm.$set(_vm.tmpdbcondition, \"enviromentname\", $$v)},expression:\"tmpdbcondition.enviromentname\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.enviromentnameList),function(envname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":envname.enviromentname,\"value\":envname.enviromentname,\"required\":\"\"}})],1)})],2)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"服务器\",\"prop\":\"machinename\",\"required\":\"\"}},[_c('el-select',{attrs:{\"placeholder\":\"服务器\"},on:{\"change\":function($event){return _vm.selectChangedMN($event)}},model:{value:(_vm.tmpdbcondition.machinename),callback:function ($$v) {_vm.$set(_vm.tmpdbcondition, \"machinename\", $$v)},expression:\"tmpdbcondition.machinename\"}},[_c('el-option',{staticStyle:{\"display\":\"none\"},attrs:{\"label\":\"请选择\",\"value\":\"''\"}}),_vm._v(\" \"),_vm._l((_vm.machinenameList),function(macname,index){return _c('div',{key:index},[_c('el-option',{attrs:{\"label\":((macname.machinename) + \" ：\" + (macname.ip)),\"value\":macname.machinename,\"required\":\"\"}})],1)})],2)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){$event.preventDefault();_vm.dialogFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),(_vm.dialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"danger\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.$refs['tmpdbcondition'].resetFields()}}},[_vm._v(\"重置\")]):_vm._e(),_vm._v(\" \"),(_vm.dialogStatus === 'add')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.adddbcondition($event)}}},[_vm._v(\"添加\")]):_vm._e(),_vm._v(\" \"),(_vm.dialogStatus === 'update')?_c('el-button',{attrs:{\"type\":\"success\",\"loading\":_vm.btnLoading},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.updatedbcondition($event)}}},[_vm._v(\"修改\")]):_vm._e()],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5a803d14\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/condition/dbcondition/index.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5a803d14\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/condition/dbcondition/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}